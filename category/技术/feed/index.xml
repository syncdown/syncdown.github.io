<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>技术</title>
	<atom:link href="https://syncdown.github.io/category/%E6%8A%80%E6%9C%AF/feed/" rel="self" type="application/rss+xml" />
	<link>https://syncdown.github.io/</link>
	<description></description>
	<lastBuildDate>Sun, 02 Jun 2024 06:59:45 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.3</generator>

<image>
	<url>https://syncdown.github.io/wp-content/uploads/2024/04/syncdown-150x150.png</url>
	<title>技术</title>
	<link>https://syncdown.github.io/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>多个github账号的写入</title>
		<link>https://syncdown.github.io/%e5%a4%9a%e4%b8%aagithub%e8%b4%a6%e5%8f%b7%e7%9a%84%e5%86%99%e5%85%a5/</link>
		
		<dc:creator><![CDATA[Zhenyu Chen]]></dc:creator>
		<pubDate>Sun, 02 Jun 2024 06:59:45 +0000</pubDate>
				<category><![CDATA[技术]]></category>
		<category><![CDATA[git]]></category>
		<guid isPermaLink="false">https://syncdown.github.io/?p=179</guid>

					<description><![CDATA[不排除一个用户有多个github账号的情况，当进行remote repository的写入的时候，很可能会因为多个github账号而导致push失败的情况。 比如，我有两个github账号， 一个叫tigbox，一个叫syncdown。ssh-keygen -t [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>不排除一个用户有多个github账号的情况，当进行remote repository的写入的时候，很可能会因为多个github账号而导致push失败的情况。 </p>



<p>比如，我有两个github账号， 一个叫tigbox，一个叫syncdown。ssh-keygen -t rsa分别生成了各自的公私密钥对。默认全局的是tigbox，毕竟~/.ssh/id_rsa就是tigbox账号的。</p>



<p>git clone了syncdown.github.io是没有问题的， 因为这个repository是public的，谁都可以读取。</p>



<p>但是在提交的时候， 就出现了如下的问题，显示premission denied to tigbox。</p>



<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="1024" height="171" src="https://syncdown.github.io/wp-content/uploads/2024/06/image-1024x171.png" alt="" class="wp-image-181" srcset="https://syncdown.github.io/wp-content/uploads/2024/06/image-1024x171.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/06/image-300x50.png 300w, https://syncdown.github.io/wp-content/uploads/2024/06/image-768x128.png 768w, https://syncdown.github.io/wp-content/uploads/2024/06/image.png 1344w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>这么看，就清晰多了。syncdown的repository在提交的时候发现是tigbox的github账号，经典的跑偏啊，而跑偏最初始的原因就是因为默认是~/.ssh/id_rsa，那似乎如何引导鉴权程序去使用syncdown的ssh key file就是关键，ssh key file ->github 账号 </p>



<p>编辑~/.ssh/config文件， 把它搞成大概下面的样子。就是两个账号的管理，主要是依靠IdentityFile进行区分的</p>



<figure class="wp-block-image size-full"><img decoding="async" width="804" height="462" src="https://syncdown.github.io/wp-content/uploads/2024/06/image-1.png" alt="" class="wp-image-183" srcset="https://syncdown.github.io/wp-content/uploads/2024/06/image-1.png 804w, https://syncdown.github.io/wp-content/uploads/2024/06/image-1-300x172.png 300w, https://syncdown.github.io/wp-content/uploads/2024/06/image-1-768x441.png 768w" sizes="(max-width: 804px) 100vw, 804px" /></figure>



<p>回到当前的本地的repository目录，查看并添加ssh IdentityFile</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="131" src="https://syncdown.github.io/wp-content/uploads/2024/06/image-2-1024x131.png" alt="" class="wp-image-185" srcset="https://syncdown.github.io/wp-content/uploads/2024/06/image-2-1024x131.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/06/image-2-300x38.png 300w, https://syncdown.github.io/wp-content/uploads/2024/06/image-2-768x98.png 768w, https://syncdown.github.io/wp-content/uploads/2024/06/image-2.png 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>之后就能顺利的进行提交了，毕竟通过IdentityFile已经能区分出github的账号。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>GPT-Sovits使用</title>
		<link>https://syncdown.github.io/gpt-sovits%e4%bd%93%e9%aa%8c/</link>
		
		<dc:creator><![CDATA[Zhenyu Chen]]></dc:creator>
		<pubDate>Thu, 18 Apr 2024 11:19:53 +0000</pubDate>
				<category><![CDATA[技术]]></category>
		<category><![CDATA[AI]]></category>
		<category><![CDATA[TTS]]></category>
		<category><![CDATA[声音克隆]]></category>
		<guid isPermaLink="false">https://syncdown.github.io/?p=158</guid>

					<description><![CDATA[AI时代，要是不搞点人工智能方面的东西，作为技术人员碰面了都不好意思跟人打交道。当然之前也零星搞过一些皮毛，但是时间一长就忘记了。 自诩天生对声音敏感，那么AGI就从声音开始进行记录吧。AI和声音相关的有很多，如果是生成的话，主要分TTS（文本转语音）和RVC（声音转声音），本文的重点就是TTS，目前当红炸子鸡就是https://github.com/RVC-Boss/GPT-SoVITS 为什么叫GPT-Sovits？ GPT是生成式预训练变换器的缩写，show for [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>AI时代，要是不搞点人工智能方面的东西，作为技术人员碰面了都不好意思跟人打交道。当然之前也零星搞过一些皮毛，但是时间一长就忘记了。</p>



<p>自诩天生对声音敏感，那么AGI就从声音开始进行记录吧。AI和声音相关的有很多，如果是生成的话，主要分TTS（文本转语音）和RVC（声音转声音），本文的重点就是TTS，目前当红炸子鸡就是<a href="https://github.com/RVC-Boss/GPT-SoVITS">https://github.com/RVC-Boss/GPT-SoVITS</a> </p>



<h4 class="wp-block-heading">为什么叫GPT-Sovits？</h4>



<p>GPT是生成式预训练变换器的缩写，show for Generative Pre-trained Transformer，并不是openai公司的专属。Sovits本身是中国本土的歌声合成爱好者Rcell基于VITS、soft-vc、VISinger2等项目开发的开源程序，不知为何他删除了自己的仓库，后来由svc-develop-team这个账号进行维护。</p>



<p>而我们今天的主角RVC-Boss（B站的名字叫花儿不哭）就是借鉴了Sovits和GPT，所以名字就叫GPT-Sovits，看来人家起的名字还是挺贴切的。另外花儿不哭和Rcell是因为RVC项目而结识的，据说他们灵魂讨论了不下百次。</p>



<p>Sovits的项目地址<a href="https://github.com/svc-develop-team/so-vits-svc">https://github.com/svc-develop-team/so-vits-svc</a> 不过现在已经是存档的状态了（只读）</p>



<h4 class="wp-block-heading">GPT-Sovits有啥用？</h4>



<ul>
<li>短时声音样本，对外宣传是5秒钟的声音即可。</li>



<li>训练时间短，1分钟即可完成训练。其实整个过程分十多步，即便单独把训练单独拎出来说，也不是1分钟就能完成的。尤其是GPT模型的训练。话说回来，还是要肯定这个项目的，起码比闭源的字节跳动要敞亮多了。
<ul>
<li>语音切分</li>



<li>语音降噪</li>



<li>ASR</li>



<li>语音文本标注</li>



<li>文本获取</li>



<li>自监督特征提取</li>



<li>音色token提取</li>



<li>Sovits模型训练</li>



<li>GPT模型训练</li>



<li>推理：选择好Sovits模型和GPT模型</li>
</ul>
</li>



<li>语言支持英日中，实际推理过程中如果出现中英混杂的情况，可能会崩掉</li>



<li></li>
</ul>



<p>注意，作者说<strong>在 Mac 上使用 GPU 训练的模型效果显著低于其他设备训练的模型，所以我们暂时使用CPU进行训练。</strong></p>



<p>应该是笔误，说的是只使用CPU进行训练，怪不得说慢呢。</p>



<p>即便如此，目前能找到的声音样本少，效果好的就是GPT-Sovits项目，非常良心。</p>



<h4 class="wp-block-heading">GPT-Sovits的安装</h4>



<ol>
<li><code>xcode-select --install</code>&nbsp;安装 Xcode command-line tools</li>



<li><code>brew install ffmpeg</code>&nbsp;或&nbsp;<code>conda install ffmpeg</code>&nbsp;安装 FFmpeg</li>



<li>conda里面安装依赖
<ul>
<li>conda create -n GPTSoVits python=3.9</li>



<li>conda activate GPTSoVits</li>



<li>pip install -r requirements.txt 或者python3.9 -m pip install -r requirements.txt</li>
</ul>
</li>



<li>下载模型&nbsp;<a href="https://huggingface.co/lj1995/GPT-SoVITS">GPT-SoVITS Models</a>&nbsp;下载预训练模型，并将它们放置在&nbsp; 项目目录\<code>GPT_SoVITS\pretrained_models</code></li>
</ol>



<h4 class="wp-block-heading">GPT-Sovits的启动</h4>



<p>没什么好说的， python webui.py就是启动命令</p>



<h4 class="wp-block-heading">另一种方式：Docker compose启动方式（不推荐，尝试一下就好）</h4>



<ol>
<li>修改docker-compser.yaml </li>
</ol>



<p>因为我的电脑是mac的， 由于m1的GPU存在内存泄露的情况， 所以不用GPU训练，devices: [] 写成空list，不然会报错，说什么reservations.devices必须是list列表形式。</p>



<p>因为电脑是arm64架构的， 配置内容和image平级的， 添加一个platform: linux/arm64配置项</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="439" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-37-1024x439.png" alt="" class="wp-image-165" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-37-1024x439.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-37-300x129.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-37-768x329.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-37.png 1484w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>不过目前还没有arm64架构的image</p>



<p>2. docker compose -f docker-compose.yaml up -d</p>



<p>但是没想到压根就没有arm64平台的</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="81" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-38-1024x81.png" alt="" class="wp-image-166" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-38-1024x81.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-38-300x24.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-38-768x61.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-38-1536x121.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-38-2048x162.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>算了， 配置项里面删除掉platform，再试试看。</p>



<p>倒是能启动了， 也能训练，就是推理页面打不开，并且页面的打开要靠手动输入地址。比如初始页面，标注页面等等，页面UI也没有做中文本地化。</p>



<p>看完Docker Compose这部分，还是建议不要使用这种方式了。</p>



<h4 class="wp-block-heading">模型训练</h4>



<p>语音包就是datasets，第一步就是对训练数据做一些预处理</p>



<p>1、人声分离（optional）</p>



<p>尽量找高质量的干音，训练数据的质量越好最终的效果也就越好。如果实在是找不到UVR人声分离就派上用场了。</p>



<p>2、语音切分</p>



<p>将路径下的所有文件按照统一的制式进行切割，具体里面涉及很多参数细节，默认就好</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="484" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-39-1024x484.png" alt="" class="wp-image-169" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-39-1024x484.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-39-300x142.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-39-768x363.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-39-1536x726.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-39-2048x968.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>3、语音降噪（optional）</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="129" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-40-1024x129.png" alt="" class="wp-image-170" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-40-1024x129.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-40-300x38.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-40-768x97.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-40-1536x194.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-40-2048x258.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>4、ASR</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="411" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-41-1024x411.png" alt="" class="wp-image-171" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-41-1024x411.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-41-300x120.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-41-768x308.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-41-1536x616.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-41-2048x821.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>要填写输入路径，ASR完成后需要进行人工校验，填写.list文件路径之后勾选「是否开启打标webui」，然后程序会单独新开一个tab窗口，校对好之后提交更改，其实最后是对.list文件进行了修改。</p>



<p>5、训练集格式化</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="611" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-42-1024x611.png" alt="" class="wp-image-172" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-42-1024x611.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-42-300x179.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-42-768x458.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-42-1536x916.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-42-2048x1222.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>以mac m2为例， 没必要填写GPU卡</p>



<p>6、 模型训练</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="582" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-43-1024x582.png" alt="" class="wp-image-173" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-43-1024x582.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-43-300x170.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-43-768x436.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-43-1536x872.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-43-2048x1163.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>7、 推理</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="389" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-44-1024x389.png" alt="" class="wp-image-174" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-44-1024x389.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-44-300x114.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-44-768x292.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-44-1536x584.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-44-2048x778.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>选择两个模型，都在一个实验下。 </p>



<p>勾选「是否开启TTS推理WebUI」，程序会帮你打开9872这个端口的页面，然后就可以开始推理了。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="623" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-45-1024x623.png" alt="" class="wp-image-175" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-45-1024x623.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-45-300x183.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-45-768x467.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-45-1536x935.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-45-2048x1246.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>retool查询Mongodb Atlas</title>
		<link>https://syncdown.github.io/retool%e6%9f%a5%e8%af%a2mongodb-atlas/</link>
		
		<dc:creator><![CDATA[Zhenyu Chen]]></dc:creator>
		<pubDate>Fri, 12 Apr 2024 10:41:32 +0000</pubDate>
				<category><![CDATA[技术]]></category>
		<category><![CDATA[mongodb]]></category>
		<category><![CDATA[retool]]></category>
		<guid isPermaLink="false">https://syncdown.github.io/?p=155</guid>

					<description><![CDATA[Mongodb Atlas可以托管一个免费的mongo实例，retool呢几乎也是免费的。 几分钟这俩就可以拼凑出一个简单的数据查询页面。 未完待续]]></description>
										<content:encoded><![CDATA[
<p></p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="757" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-36-1024x757.png" alt="" class="wp-image-156" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-36-1024x757.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-36-300x222.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-36-768x567.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-36.png 1432w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>Mongodb Atlas可以托管一个免费的mongo实例，retool呢几乎也是免费的。 </p>



<p>几分钟这俩就可以拼凑出一个简单的数据查询页面。</p>



<p>未完待续</p>



<p></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>本博客的技术垫脚石：wordpress和github pages来建静态网站（二）</title>
		<link>https://syncdown.github.io/%e6%9c%ac%e5%8d%9a%e5%ae%a2%e7%9a%84%e6%8a%80%e6%9c%af%e5%9e%ab%e8%84%9a%e7%9f%b3%ef%bc%9awordpress%e5%92%8cgithub-pages%e6%9d%a5%e5%bb%ba%e9%9d%99%e6%80%81%e7%bd%91%e7%ab%99-2/</link>
		
		<dc:creator><![CDATA[Zhenyu Chen]]></dc:creator>
		<pubDate>Tue, 09 Apr 2024 11:18:16 +0000</pubDate>
				<category><![CDATA[技术]]></category>
		<category><![CDATA[github pages]]></category>
		<category><![CDATA[wordpress]]></category>
		<category><![CDATA[静态博客]]></category>
		<guid isPermaLink="false">https://syncdown.github.io/?p=92</guid>

					<description><![CDATA[上回书我们说到为了实践费曼学习法而用静态方式来搭建wordpress并最终发布。其中的关键就是导出网站前端三剑客，然后将静态文件部署到github.io上。 我们先把github的东西搞定。 创建一个名叫username.github.io的仓库 名字很重要，开始就起好，即使没起好后面也不要变。 在github上没抢注到syncup这个username，反其道就叫syncdown，喻义“同步回滚”。repository的名字就叫syncdown.github.io [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>上回书我们说到为了实践费曼学习法而用静态方式来搭建wordpress并最终发布。其中的关键就是导出网站前端三剑客，然后将静态文件部署到github.io上。</p>



<p>我们先把github的东西搞定。</p>



<h2 class="wp-block-heading">创建一个名叫username.github.io的仓库</h2>



<p><strong>名字很重要，开始就起好，即使没起好后面也不要变。</strong></p>



<p>在github上没抢注到syncup这个username，反其道就叫syncdown，喻义“同步回滚”。repository的名字就叫<mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-orange-color">syncdown.github.io</mark></p>



<p>切记这个repsitory的可见性要设置成public的，如果设置成private的，会在后续的deploy环节获取不到对应的资源。想想也对，后续的CICD流程触发起来的deploy action会去repository中获取数据，虽然都是github平台的事情，但github action此时就好比一个第三方流程，如果是你的仓库是private的话，肯定获取不到资源的。如同代码包中的类的可见性。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="425" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-21-1024x425.png" alt="" class="wp-image-101" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-21-1024x425.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-21-300x124.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-21-768x319.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-21-1536x637.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-21-2048x849.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<ul>
<li>如果是新创建的repository，没什么好说的，public就好。</li>



<li>如果是已经创建的repository，可见性已经设置成private的，那也可以改成public的。</li>
</ul>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="558" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-20-1024x558.png" alt="" class="wp-image-98" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-20-1024x558.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-20-300x163.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-20-768x418.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-20-1536x837.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-20.png 1950w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h2 class="wp-block-heading">设置repository中github actions的workflow</h2>



<p>设置repository中github actions的workflow，<strong>说人话</strong>就是，每当repository有代码提交就会触发一个workflow工作流，这个工作流我们要选择deploy部署，也就是把静态资源部署到github的CDN中。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="340" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-23-1024x340.png" alt="" class="wp-image-103" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-23-1024x340.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-23-300x100.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-23-768x255.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-23-1536x511.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-23-2048x681.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="201" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-24-1024x201.png" alt="" class="wp-image-104" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-24-1024x201.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-24-300x59.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-24-768x151.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-24-1536x301.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-24-2048x402.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="466" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-25-1024x466.png" alt="" class="wp-image-105" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-25-1024x466.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-25-300x137.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-25-768x349.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-25-1536x699.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-25-2048x932.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>github pages提供了static html的工作流模板，分支默认是main，也就是说main branch的代码提交才会触发这个workflow。不用做任何修改，提交就用。</p>



<p>本地git clone，然后<strong>记录代码路径后续有用的</strong>，为了好表示就暂且搞成<mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-orange-color">~/code/syncdown.github.io</mark></p>



<p>做完了github这边的事情，再回来到wordpress。</p>



<p>既然是wordpress产生的静态文件要部署到github.io，那就要把静态文件导出到<mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-orange-color">~/code/syncdown.github.io</mark>。</p>



<h2 class="wp-block-heading">安装WP插件Simply Static</h2>



<p>wordpress提供了很多开源的插件， 其中就有导出静态文件需要的插件&#8212;&#8212;Simply Static</p>



<p>在wp admin左侧列表页里面的Plugins按图索骥，一步一步找到Simply Static，找到就能安装上，然后别忘记active。</p>



<div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex">
<div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow">
<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" width="764" height="372" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-18.png" alt="" class="wp-image-94" style="width:386px;height:auto" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-18.png 764w, https://syncdown.github.io/wp-content/uploads/2024/04/image-18-300x146.png 300w" sizes="(max-width: 764px) 100vw, 764px" /></figure>
</div>



<div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow">
<figure class="wp-block-image size-large is-resized"><img loading="lazy" decoding="async" width="1024" height="334" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-19-1024x334.png" alt="" class="wp-image-95" style="width:576px;height:auto" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-19-1024x334.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-19-300x98.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-19-768x251.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-19-1536x502.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-19-2048x669.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>
</div>
</div>



<h2 class="wp-block-heading">配置Simply Static</h2>



<p>安装好这个插件之后，在wordpress的admin管理页面对应的网站就是当前的syncdown了。</p>



<p>replacing urls选择绝对路径，填写好你的username.github.io</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="588" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-26-1024x588.png" alt="" class="wp-image-116" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-26-1024x588.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-26-300x172.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-26-768x441.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-26-1536x882.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-26-2048x1177.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>在deploy部署一项中，路径写刚刚git clone到本地的<mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-orange-color">~/code/syncdown.github.io</mark></p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="501" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-27-1024x501.png" alt="" class="wp-image-117" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-27-1024x501.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-27-300x147.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-27-768x375.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-27-1536x751.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-27-2048x1001.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h2 class="wp-block-heading">用Simply Static导出到本地github触发提交</h2>



<p>配置都已经好了，就放心大胆的导出静态文件吧。按照预期静态文件会导出到本地的github</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="480" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-28-1024x480.png" alt="" class="wp-image-118" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-28-1024x480.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-28-300x141.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-28-768x360.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-28-1536x720.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-28-2048x961.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>之后大胆的git push触发github workflow，如果顺利的话在github用户页面中可以查看到此次build的信息。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="505" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-29-1024x505.png" alt="" class="wp-image-119" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-29-1024x505.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-29-300x148.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-29-768x379.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-29-1536x757.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-29-2048x1010.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>至此最核心的几个流程都已经描述完了，最后打开你的username.github.io来检查一下吧。</p>



<h4 class="wp-block-heading">如何设置文章的头图</h4>



<p>文章的头图可能会带给用户aha时刻，对运营同学而言是至关重要的一步，不过这个文章的头图设置还是很难找的，如下</p>



<figure class="wp-block-video"><video controls src="https://syncdown.github.io/wp-content/uploads/2024/04/Filmage-2024-04-10_100412.mp4"></video></figure>



<p></p>
]]></content:encoded>
					
		
		<enclosure url="https://syncdown.github.io/wp-content/uploads/2024/04/Filmage-2024-04-10_100412.mp4" length="3711840" type="video/mp4" />

			</item>
		<item>
		<title>本博客的技术垫脚石：wordpress和github pages来建静态网站（一）</title>
		<link>https://syncdown.github.io/%e6%9c%ac%e5%8d%9a%e5%ae%a2%e7%9a%84%e6%8a%80%e6%9c%af%e5%9e%ab%e8%84%9a%e7%9f%b3%ef%bc%9awordpress%e5%92%8cgithub-pages%e6%9d%a5%e5%bb%ba%e9%9d%99%e6%80%81%e7%bd%91%e7%ab%99/</link>
		
		<dc:creator><![CDATA[Zhenyu Chen]]></dc:creator>
		<pubDate>Mon, 08 Apr 2024 14:24:18 +0000</pubDate>
				<category><![CDATA[技术]]></category>
		<category><![CDATA[github pages]]></category>
		<category><![CDATA[wordpress]]></category>
		<category><![CDATA[静态博客]]></category>
		<guid isPermaLink="false">https://syncdown.github.io/?p=40</guid>

					<description><![CDATA[本博客建立初衷是为了完成自我学习。 也许是我肤浅吧，我狭隘的认为在这个时代写博客就是自我学习的一种形式。 简单的个人博客并不是用来给别人看的，仅仅是作者本人用来抒发写作欲或者是进行费曼学习实践。 当我看看到一个高产的博主长年累月经营自己的blog，但是平均每篇博客只有四五百的PV，我沉默了也更坚定了这个说法。 既然如此，评论功能、登录或者花里胡哨的一些功能都没有必要喽，也不需要nginx+mysql，仅仅是静态static [&#8230;]]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow">
<p>本博客建立初衷是为了完成自我学习。</p>



<p>也许是我肤浅吧，我狭隘的认为在这个时代写博客就是自我学习的一种形式。</p>



<p><strong><mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-green-color">简单的个人博客并不是用来给别人看的，仅仅是作者本人用来抒发写作欲或者是进行费曼学习实践。</mark></strong></p>



<p>当我看看到一个高产的博主长年累月经营自己的blog，但是平均每篇博客只有四五百的PV，我沉默了也更坚定了这个说法。</p>
<cite>既然如此，评论功能、登录或者花里胡哨的一些功能都没有必要喽，也不需要nginx+mysql，仅仅是静态static html页面似乎也能满足需求。不但省下了租服务器的成本，也免去国内备案的繁琐。</cite></blockquote>



<p><strong><em><mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-blue-color">我写我的博客，和你看不看没有太大关系</mark></em></strong>。在如今流量为王的年代，如果是为了搏君一键三连，那就不是博客形式了，而是短视频的形式。当然公众号另当别论，公众号写文章对于我这种非营销类型的人来说有种社死的感觉，而且公众号的内容特别容易被wx审核掉，比如话题涉及科学上网、国外手机卡等等</p>



<p>跑题了，收回来<img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f605.png" alt="😅" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f605.png" alt="😅" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f605.png" alt="😅" class="wp-smiley" style="height: 1em; max-height: 1em;" />。本文的重点是为了费曼实践而写个人博客。</p>



<h4 class="wp-block-heading">个人博客为什么不用动态，而是采用静态的形式？</h4>



<p>个人博客可以分成动态和静态两种形式，动态就是传统wordpress的（nginx+php+mysql），为什么不用动态而是选择静态的形式呢？因为<strong>穷</strong>，真的┓( ´∀` )┏。</p>



<p>如果是为了进行费曼学习，用notion这样的私人笔记可能不行。虽说咱不是为了流量，但只有自己的内容<strong>公开</strong>出来了，才能叫费曼学习实践，是不？。但凡notion能公开某个文件夹，我会分分钟弃疗，舍弃个人博客。</p>



<p>但是为什么说因为穷才选静态方式呢？</p>



<p>传统的wordpress动态方式，部署要租赁服务器、购买数据库、购买域名，看看大家常用的阿里云价格</p>



<div class="wp-block-group"><div class="wp-block-group__inner-container is-layout-constrained wp-block-group-is-layout-constrained">
<div class="wp-block-group is-vertical is-layout-flex wp-container-core-group-is-layout-3 wp-block-group-is-layout-flex">
<figure class="wp-block-image size-large is-resized"><img loading="lazy" decoding="async" width="1024" height="409" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-1-1024x409.png" alt="" class="wp-image-42" style="width:398px;height:auto" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-1-1024x409.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-1-300x120.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-1-768x307.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-1.png 1448w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>99一年，原价是956，好像买到就省8百多人民币似的，但是别忘了这还不包括数据库，恰恰数据库是大头，而且这系统还不是分布式的（别用keepalived来说事儿哈，那个冷备的东西，和负载均衡级别的高可用根本不是一回事）。一旦躬身入局了某个云平台，日后你又想换个云平台还挺费劲的，比如从阿里云到腾讯云，需要折腾各种镜像。</p>



<p>问题的本质我觉得还是穷，要是有钱，我也不介意把鸡笼搞成钻石的。比如传言王思聪的电脑带宽费用就是一年30万，你要是有茫茫多的钱，你也可以肆无忌惮的花。</p>



<div class="wp-block-group is-vertical is-layout-flex wp-container-core-group-is-layout-2 wp-block-group-is-layout-flex">
<p>如果博客是独立域名还需要备案。我曾经真的因为网站备案去过派出所，虽说这年头去派出所也不是什么大不了的事，不过你得等啊，跟小媳妇似的老老实实地等个把小时，然后特别谦恭的跟民警讲来由、出示证明，想想就觉得生无可恋。</p>



<p></p>



<div class="wp-block-group is-vertical is-layout-flex wp-container-core-group-is-layout-1 wp-block-group-is-layout-flex">
<p>总结一下</p>



<ol>
<li>nginx+mysql部署的方式（动态方式）虽然功能丰富扩展性强，但是需要每年持续支付服务托管费。</li>



<li>独立域名的话需要进行备案，也是每年折腾一下。</li>
</ol>
</div>
</div>
</div>



<p>总之要是正儿八经弄WP传统部署，是除了费钱还费劲。</p>
</div></div>



<div class="wptb-table-container wptb-table-54" data-wptb-horizontal-scroll-status="true"><div class="wptb-table-container-matrix" id="wptb-table-id-54" data-wptb-version="1.4.14" data-wptb-pro-status="false"><table class="wptb-preview-table wptb-table-preview-head wptb-element-main-table_setting-1802" data-reconstraction="1" data-wptb-adaptive-table="0" data-wptb-table-tds-sum-max-width="464" data-wptb-cells-width-auto-count="4" style="display: table;" data-table-columns="4" role="table" data-wptb-responsive-directives="eyJyZXNwb25zaXZlRW5hYmxlZCI6dHJ1ZSwicmVzcG9uc2l2ZU1vZGUiOiJhdXRvIiwicHJlc2VydmVSb3dDb2xvciI6ZmFsc2UsInJlbGF0aXZlV2lkdGgiOiJ3aW5kb3ciLCJoZWFkZXJGdWxseU1lcmdlZCI6ZmFsc2UsIm1vZGVPcHRpb25zIjp7ImF1dG8iOnsiZGlzYWJsZWQiOnsiZGVza3RvcCI6ZmFsc2UsInRhYmxldCI6ZmFsc2UsIm1vYmlsZSI6ZmFsc2V9LCJ0b3BSb3dBc0hlYWRlciI6eyJkZXNrdG9wIjpmYWxzZSwidGFibGV0Ijp0cnVlLCJtb2JpbGUiOnRydWV9LCJyZXBlYXRNZXJnZWRIZWFkZXIiOnsiZGVza3RvcCI6dHJ1ZSwidGFibGV0Ijp0cnVlLCJtb2JpbGUiOnRydWV9LCJzdGF0aWNUb3BSb3ciOnsiZGVza3RvcCI6ZmFsc2UsInRhYmxldCI6ZmFsc2UsIm1vYmlsZSI6ZmFsc2V9LCJjZWxsU3RhY2tEaXJlY3Rpb24iOnsiZGVza3RvcCI6InJvdyIsInRhYmxldCI6InJvdyIsIm1vYmlsZSI6InJvdyJ9LCJjZWxsc1BlclJvdyI6eyJkZXNrdG9wIjoxLCJ0YWJsZXQiOjIsIm1vYmlsZSI6MX19fSwiYnJlYWtwb2ludHMiOnsiZGVza3RvcCI6eyJuYW1lIjoiZGVza3RvcCIsIndpZHRoIjoxMDI0fSwidGFibGV0Ijp7Im5hbWUiOiJ0YWJsZXQiLCJ3aWR0aCI6NzAwfSwibW9iaWxlIjp7Im5hbWUiOiJtb2JpbGUiLCJ3aWR0aCI6MzAwfX19" data-wptb-table-directives="eyJpbm5lckJvcmRlcnMiOnsiYWN0aXZlIjoiYWxsIiwiYm9yZGVyV2lkdGgiOiIiLCJib3JkZXJSYWRpdXNlcyI6eyJhbGwiOmZhbHNlfX19" data-wptb-extra-styles="LyogRW50ZXIgeW91ciBjdXN0b20gQ1NTIHJ1bGVzIGhlcmUgKi8=" data-wptb-horizontal-scroll-status="true"><tbody><tr class="wptb-row wptb-table-head" style="background-color: rgb(221, 153, 51);" data-wptb-bg-color="#DD9933"><td class="wptb-cell" data-x-index="0" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-y-index="0" data-sorted-vertical="ask-disabled"><div class="wptb-text-container wptb-ph-element wptb-element-text-2" style="color: rgb(255, 255, 255); font-size: 15px;"><div class="" style="position: relative;"><p style="text-align: center;"><strong>WP&#26041;&#24335;</strong></p><p style="text-align: center;"><strong></strong></p></div></div></td><td class="wptb-cell" data-x-index="1" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-y-index="0" data-sorted-vertical="ask-disabled"><div class="wptb-text-container wptb-ph-element wptb-element-text-3" style="color: rgb(255, 255, 255); font-size: 15px;"><div class="" style="position: relative;"><p>&nbsp;&#20248;&#28857;</p><p></p></div></div></td><td class="wptb-cell" data-x-index="2" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-y-index="0" data-sorted-vertical="ask-disabled"><div class="wptb-text-container wptb-ph-element wptb-element-text-4" style="color: rgb(255, 255, 255); font-size: 15px;"><div class="" style="position: relative;"><p>&#32570;&#28857;</p><p></p></div></div></td><td class="wptb-cell" data-x-index="3" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-y-index="0" data-sorted-vertical="ask-disabled"><div class="wptb-text-container wptb-ph-element wptb-element-text-1" style="color: rgb(255, 255, 255); font-size: 15px;"><div class="" style="position: relative;"><p>&#25104;&#26412;</p><p></p></div></div></td></tr><tr class="wptb-row" data-wptb-bg-color="" style="--hover-bg-color: undefined;"><td class="wptb-cell" data-x-index="0" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Name" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="1"><div class="wptb-text-container wptb-ph-element wptb-element-text-6"><div class="" style="position: relative;"><p>&nbsp;&#21160;&#24577;&#26041;&#24335;</p><p></p></div></div></td><td class="wptb-cell" data-x-index="1" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Position" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="1"><div class="wptb-text-container wptb-ph-element wptb-element-text-9" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p>1. &#21151;&#33021;&#20016;&#23500;&#65288;&#21487;&#25903;&#25345;&#27880;&#20876;&#12289;&#30331;&#24405;&#12289;&#35780;&#35770;&#12289;&#35746;&#38405;&#12289;&#25903;&#20184;&#31561;&#65289;</p><p></p><p>2. &#25193;&#23637;&#24615;&#24378;&#65288;&#26377;&#21518;&#21488;&#35821;&#35328;&#21152;&#25345;&#65289;</p></div></div></td><td class="wptb-cell" data-x-index="2" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Office" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="1"><div class="wptb-text-container wptb-ph-element wptb-element-text-14" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p>1. &#20570;&#19981;&#21040;&#39640;&#21487;&#29992;&#65288;&#21333;&#26426;&#65292;&#25346;&#20102;&#23601;&#25346;&#20102;&#65289;</p><p>&#21487;&#33021;&#26159;&#25105;&#24819;&#22810;&#20102;&#65292;&#20154;&#24515;&#19981;&#36275;&#34503;&#21534;&#35937;&#65292;&#33457;&#36825;&#20040;&#28857;&#38065;&#23601;&#24819;&#39640;&#21487;&#29992;&#65292;&#25903;&#25345;&#36127;&#36733;&#22343;&#34913;&#21644;failover</p></div></div></td><td class="wptb-cell" data-x-index="3" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Age" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="1"><div class="wptb-text-container wptb-ph-element wptb-element-text-20" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p>1. &#20570;&#19981;&#21040;&#39640;&#21487;&#29992;&#65288;&#21333;&#26426;&#65292;&#25346;&#20102;&#23601;&#25346;&#20102;&#65289;</p><p>&#21487;&#33021;&#26159;&#25105;&#24819;&#22810;&#20102;&#65292;&#20154;&#24515;&#19981;&#36275;&#34503;&#21534;&#35937;&#65292;&#33457;&#36825;&#20040;&#28857;&#38065;&#23601;&#24819;&#39640;&#21487;&#29992;&#65292;&#25903;&#25345;&#36127;&#36733;&#22343;&#34913;&#21644;failover</p></div></div></td></tr><tr class="wptb-row" data-wptb-bg-color="" style="--hover-bg-color: undefined;"><td class="wptb-cell" data-x-index="0" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Name" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="2"><div class="wptb-text-container wptb-ph-element wptb-element-text-7" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p style="text-align: center;">&#38745;&#24577;&#26041;&#24335;</p></div></div></td><td class="wptb-cell" data-x-index="1" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Position" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="2"><div class="wptb-text-container wptb-ph-element wptb-element-text-10" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p>1. &#23545;&#31449;&#38271;&#27969;&#31243;&#31616;&#21333;</p><p>2. &#22240;&#20026;&#26159;&#38745;&#24577;&#30340;&#65292;&#25152;&#20197;&#25903;&#25345;&#39640;&#24182;&#21457;&#65292;&#21453;&#27491;&#37117;&#26159;&#24179;&#21488;&#30340;CDN&#26469;&#25179;&#12290;</p></div></div></td><td class="wptb-cell" data-x-index="2" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Office" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="2"><div class="wptb-text-container wptb-ph-element wptb-element-text-15" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p>1. &#21151;&#33021;&#31616;&#21333;&#65292;&#29992;&#25143;&#21482;&#33021;&#38405;&#35272;&#19981;&#33021;&#20132;&#20114;</p><p>2. &#25193;&#23637;&#24615;&#27809;&#26377;</p><p>&#31616;&#21333;&#26469;&#35828;&#21160;&#24577;&#30340;&#20248;&#28857;&#23601;&#26159;&#38745;&#24577;&#30340;&#32570;&#28857;</p></div></div></td><td class="wptb-cell" data-x-index="3" data-wptb-css-td-auto-width="true" style="padding: 8px;" data-wptb-title-column="Age" data-wptb-title-column-font-size="" data-wptb-title-column-color="rgb(255, 255, 255)" data-wptb-title-background-color="rgb(221, 153, 51)" data-wptb-title-align="center" data-y-index="2"><div class="wptb-text-container wptb-ph-element wptb-element-text-17" style="color: rgb(0, 0, 0); font-size: 15px;"><div class="" style="position: relative;"><p>1. &#27604;&#31169;&#20154;&#31508;&#35760;&#30340;&#25104;&#26412;&#39640;</p><p></p><p>2. &#27604;wordpress&#21160;&#24577;&#26041;&#24335;&#25104;&#26412;&#20302;&#24456;&#22810;</p></div></div></td></tr></tbody></table></div></div>




<p>因为穷和懒，我的个人博客和wordpress传统动态方式无缘，溜了溜了<img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f3c3-1f3fb-200d-2640-fe0f.png" alt="🏃🏻‍♀️" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f3c3-1f3fb-200d-2640-fe0f.png" alt="🏃🏻‍♀️" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f3c3-1f3fb-200d-2640-fe0f.png" alt="🏃🏻‍♀️" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f3c3-1f3fb-200d-2640-fe0f.png" alt="🏃🏻‍♀️" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f3c3-1f3fb-200d-2640-fe0f.png" alt="🏃🏻‍♀️" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f3c3-1f3fb-200d-2640-fe0f.png" alt="🏃🏻‍♀️" class="wp-smiley" style="height: 1em; max-height: 1em;" />。</p>



<p>说了这么多，什么是静态方式呢<img src="https://s.w.org/images/core/emoji/15.0.3/72x72/2753.png" alt="❓" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>



<p><em><mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-blue-color">静态方式就是在本地 wordpress编辑好之后，将博客导出成静态文件（俗称前端三剑客：html、css和javascript），然后想办法把文件部署出去</mark></em>。听上去还是很简单的，不过功能就差一些了，没那么丰富，比如注册、登录、评论、支付等。</p>



<p>好在我呢要进行费曼学习实践，够用了<img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f60f.png" alt="😏" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f60f.png" alt="😏" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f60f.png" alt="😏" class="wp-smiley" style="height: 1em; max-height: 1em;" />。</p>



<p>一图胜千言，本文的重点来了，核心的流程这么来表示吧。</p>



<span id="more-40"></span>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="658" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-30-1024x658.png" alt="" class="wp-image-127" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-30-1024x658.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-30-300x193.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-30-768x494.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-30-1536x987.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-30.png 1777w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p><br></p>



<h4 class="wp-block-heading">第一步：安装Local WordPress</h4>



<p>使用具有GUI界面的<a href="https://localwp.com/releases/">Local WP</a>，选择适配你操作系统的版本进行安装。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="667" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-2-1024x667.png" alt="" class="wp-image-65" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-2-1024x667.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-2-300x195.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-2-768x500.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-2-1536x1000.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-2.png 1656w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h4 class="wp-block-heading">第二步：创建本地wordpress网站</h4>



<ol>
<li>在local wordpress上点击「create a new site」</li>



<li>选择创建新站点，继续</li>



<li>输入网站名称，继续</li>



<li>如果不清楚你的系统环境设置，直接选择Preferred。虽然是local wordpress，但是它还是会要求系统有nginx和mysql这样的中间件的。</li>



<li>输入wordpress账户信息，你的新站点将会出现在仪表盘上。</li>
</ol>



<div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-2 wp-block-columns-is-layout-flex">
<div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow">
<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="522" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-5-1024x522.png" alt="" class="wp-image-68" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-5-1024x522.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-5-300x153.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-5-768x391.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-5-1536x783.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-5.png 1550w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>
</div>



<div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow">
<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="486" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-4-1024x486.png" alt="" class="wp-image-67" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-4-1024x486.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-4-300x142.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-4-768x365.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-4-1536x729.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-4.png 1542w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>
</div>
</div>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-3 wp-block-columns-is-layout-flex">
<div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow">
<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="649" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-7-1024x649.png" alt="" class="wp-image-70" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-7-1024x649.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-7-300x190.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-7-768x487.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-7.png 1410w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>
</div>



<div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow">
<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="641" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-8-1024x641.png" alt="" class="wp-image-71" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-8-1024x641.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-8-300x188.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-8-768x480.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-8.png 1474w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>
</div>
</div>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="647" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-9-1024x647.png" alt="" class="wp-image-72" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-9-1024x647.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-9-300x190.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-9-768x485.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-9.png 1468w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h4 class="wp-block-heading">第三步：编辑本地网站</h4>



<p>我起的名字叫syncdown，起名的时候github上的用户名syncup被占用了，既然能up就能down，就随便叫syncdown了，寓意同步回滚，回到上个版本。</p>



<p>然后网站的名字一定要和github的username保持一致，域名就是syncdown.github.io，定了就不变了，名字这种虽然很重要，但是绝对不要后续投入精力。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="456" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-10-1024x456.png" alt="" class="wp-image-73" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-10-1024x456.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-10-300x134.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-10-768x342.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-10-1536x684.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-10-2048x912.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>启动WP Admin，这里需要输入wordpress的账密。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="639" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-11-1024x639.png" alt="" class="wp-image-76" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-11-1024x639.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-11-300x187.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-11-768x479.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-11-1536x958.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-11.png 2046w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>进入网站的admin页面就快进入到内容编辑部分了</p>



<h5 class="wp-block-heading">编辑网站第一步：选择主题</h5>



<p>wordpress默认安装了几个主题，其中有twenty twenty系列，今年是2024年，所以出到twenty twenty four了。</p>



<p>我选择的是cube theme，简单、图文并茂并且规整。</p>



<p>选择cube的最主要的是我想进行文章分类，比如个人博客下有技术，生活，旅行这几个分类，每篇post文章的category只设置其中一个，那么在首页就按照第一个category的所有post文章进行展示，也就是说确定了category就会展示当下分类的所有文章。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="532" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-12-1024x532.png" alt="" class="wp-image-77" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-12-1024x532.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-12-300x156.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-12-768x399.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-12-1536x799.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-12-2048x1065.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="645" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-13-1024x645.png" alt="" class="wp-image-79" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-13-1024x645.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-13-300x189.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-13-768x484.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-13-1536x968.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-13-2048x1291.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>这里注意，设置外观Appearance中的menu，一定要勾选「automatically add new top-level pages to this menu 自动将新的顶级页面添加到此菜单」选项</p>



<p>预想设置好之后它大概长这个样子。</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="300" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-14-1024x300.png" alt="" class="wp-image-82" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-14-1024x300.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-14-300x88.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-14-768x225.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-14-1536x450.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-14-2048x599.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h5 class="wp-block-heading">编辑网站第二步：搞定post文章</h5>



<div class="wp-block-media-text is-stacked-on-mobile" style="grid-template-columns:37% auto"><figure class="wp-block-media-text__media"><img loading="lazy" decoding="async" width="1024" height="689" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-16-1024x689.png" alt="" class="wp-image-85 size-full" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-16-1024x689.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-16-300x202.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-16-768x517.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-16.png 1046w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure><div class="wp-block-media-text__content">
<p>创建或者编辑一篇post文章，这里面涉及到很多细节，更多是实践，请自行探索吧。</p>



<p></p>
</div></div>



<p></p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="236" src="https://syncdown.github.io/wp-content/uploads/2024/04/image-17-1024x236.png" alt="" class="wp-image-87" srcset="https://syncdown.github.io/wp-content/uploads/2024/04/image-17-1024x236.png 1024w, https://syncdown.github.io/wp-content/uploads/2024/04/image-17-300x69.png 300w, https://syncdown.github.io/wp-content/uploads/2024/04/image-17-768x177.png 768w, https://syncdown.github.io/wp-content/uploads/2024/04/image-17-1536x354.png 1536w, https://syncdown.github.io/wp-content/uploads/2024/04/image-17-2048x472.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p class="has-text-align-left"></p>



<p>然后回到wordpress点击open site在本地模式预览网站吧。</p>



<p>至此篇幅，大概讲述了搭建静态博客差不多一大半的内容，本文也要结束了。</p>



<p>青山不改绿水长流，剩下的内容第二篇章见。</p>



<p></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
